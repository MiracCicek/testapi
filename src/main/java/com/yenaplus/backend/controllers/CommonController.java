/*
 * EnoviaRestAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.yenaplus.backend.controllers;

import com.yenaplus.backend.ApiHelper;
import com.yenaplus.backend.Server;
import com.yenaplus.backend.exceptions.ApiException;
import com.yenaplus.backend.http.request.HttpMethod;
import io.apimatic.core.ApiCall;
import io.apimatic.core.ErrorCase;
import io.apimatic.core.GlobalConfiguration;
import java.io.IOException;
import java.util.concurrent.CompletableFuture;
import java.util.concurrent.CompletionException;

/**
 * This class lists all the endpoints of the groups.
 */
public final class CommonController extends BaseController {

    /**
     * Initializes the controller.
     * @param globalConfig    Configurations added in client.
     */
    public CommonController(GlobalConfiguration globalConfig) {
        super(globalConfig);
    }

    /**
     * Gets user physicalid from username.
     * @param  u  Required parameter: Example:
     * @return    Returns the String response from the API call
     * @throws    ApiException    Represents error response from the server.
     * @throws    IOException    Signals that an I/O exception of some sort has occurred.
     */
    public String getuserpid(
            final String u) throws ApiException, IOException {
        return prepareGetuserpidRequest(u).execute();
    }

    /**
     * Gets user physicalid from username.
     * @param  u  Required parameter: Example:
     * @return    Returns the String response from the API call
     */
    public CompletableFuture<String> getuserpidAsync(
            final String u) {
        try { 
            return prepareGetuserpidRequest(u).executeAsync(); 
        } catch (Exception e) {  
            throw new CompletionException(e); 
        }
    }

    /**
     * Builds the ApiCall object for getuserpid.
     */
    private ApiCall<String, ApiException> prepareGetuserpidRequest(
            final String u) throws IOException {
        return new ApiCall.Builder<String, ApiException>()
                .globalConfig(getGlobalConfiguration())
                .requestBuilder(requestBuilder -> requestBuilder
                        .server(Server.BACKEND.value())
                        .path("/common/getuserpid")
                        .queryParam(param -> param.key("u")
                                .value(u))
                        .httpMethod(HttpMethod.GET))
                .responseHandler(responseHandler -> responseHandler
                        .deserializer(
                                response -> new String(response))
                        .nullify404(false)
                        .localErrorCase("400",
                                 ErrorCase.setReason("Bad Request",
                                (reason, context) -> new ApiException(reason, context)))
                        .globalErrorCase(GLOBAL_ERROR_CASES))
                .build();
    }
}